# Importing the class from the module
>>> MyList = __import__("1-my_list").MyList

# Checking for module docstring
>>> module_doc = __import__("1-my_list").__doc__
>>> len(module_doc) > 1
True

# Checking for class docstring
>>> class_doc = __import__("1-my_list").MyList.__doc__
>>> len(class_doc) > 1
True

# Checking for function/method docstring
>>> method_doc = __import__("1-my_list").MyList.print_sorted.__doc__
>>> len(method_doc) > 1
True

# Checking that MyList class inherits from the python class list
>>> issubclass(MyList, list)
True

# Checking for an empty list
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

# Checking for append method
>>> my_list.append(5)
>>> my_list.append(3)
>>> my_list.append(7)
>>> my_list.append(1)
>>> print(my_list)
[5, 3, 7, 1]

# Checking for sorting a list of strings
>>> my_list = MyList()
>>> my_list.append("apple")
>>> my_list.append("banana")
>>> my_list.append("orange")
>>> my_list.print_sorted()
['apple', 'banana', 'orange']

# Checking for sorting a list of mixed types
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append("apple")
>>> my_list.append(2.5)
>>> my_list.print_sorted()
[2.5, 5, 'apple']

# Checking for sorting a list of tuples
>>> my_list = MyList()
>>> my_list.append((2, 1))
>>> my_list.append((1, 2))
>>> my_list.append((3, 3))
>>> my_list.print_sorted()
[(1, 2), (2, 1), (3, 3)]

# Checking for sorting an already sorted list
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.print_sorted()
[1, 2, 3]

# Checking for sorting a list with duplicate elements
>>> my_list = MyList()
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.print_sorted()
[1, 1, 2, 2, 3, 3]
